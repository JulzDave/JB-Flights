{"version":3,"sources":["comp/Login.js","comp/Header.js","comp/Register.js","comp/DealMapper.js","api.js","comp/Editor.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","username","password","react_default","a","createElement","className","type","name","onChange","this","handler","bind","value","onClick","loginBtn","prophasAccount","props","propstate","alert","role","alertBoldTxt","alertTxt","alertOff","aria-hidden","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","resp","json","data","noUser","summonAlert","isLogged","id","firstname","lastname","following","ev","setState","Object","defineProperty","target","hasAccount","Component","Header","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","door","logOut","title","Register","regUsername","regPassword","registerBtn","length","taken","DealMapper","userFollows","btnColor","btnTxt","btnClass","parse","d","includes","src","image","alt","destination","departure","arrival","price","description","followDeal","followBtn","deleteDeal","deleteBtn","editDeal","editBtn","dealDestination","parentNode","children","innerText","dealDescription","split","substr","dealDeparture","dealArrival","dealPrice","dealID","editor","window","confirm","concat","deals","userID","parsedUserFollows","parsedDealFollows","push","dealFollows","userFollowStatus","socket","io","subscribeToData","cb","on","timestamp","emit","Editor","parseInt","maxLength","updateDeal","App","err","_this2","_this3","comp_Header","comp_Login","comp_Register","map","comp_DealMapper","key","comp_Editor","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3612387.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n  render() {\n    return (\n      <div className=\"LoginCont\">\n        <div className=\"Login\">\n          <br /><br />\n          <p className=\"loghead\">Login</p><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;User name: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"text\" name=\"username\" onChange={this.handler.bind(this)} value={this.state.username}></input></span><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;Password:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"password\" name=\"password\" onChange={this.handler.bind(this)} value={this.state.password}></input></span><br /><br /><br />\n          <button type=\"button\" className=\"btn btn-warning btn-sign-in\" onClick={this.loginBtn.bind(this)}>Sign In</button>\n          <div className=\"noAccount\" onClick={this.prophasAccount.bind(this)}>I don't have an account</div>\n\n          <div className={this.props.propstate.alert + \" alert alert-danger alert-dismissible fade show\"} role=\"alert\">\n            <strong>{this.props.propstate.alertBoldTxt}</strong> {this.props.propstate.alertTxt}\n            <button type=\"button\" className=\"close\" onClick={this.alertOff.bind(this)}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n\n  async loginBtn() {\n\n    let resp = await fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state)\n    });\n    // eslint-disable-next-line\n    let data = await resp.json();\n    debugger;\n    if (data.noUser) {\n      this.props.summonAlert(\"Error\", \"The user name or password that you typed is incorrect\")\n    }\n    else {\n      // alert(\"thanks for loging \" + data[0].firstname)\n      this.props.isLogged(data[0].id, data[0].firstname, data[0].lastname, data[0].username, data[0].password, data[0].following)\n    }\n  }\n\n  handler(ev) {\n    this.setState({ [ev.target.name]: ev.target.value })\n  }\n\n  prophasAccount() {\n    this.props.hasAccount();\n  }\n\n  alertOff() {\n    this.props.summonAlert(\"x\")\n  }\n\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Header extends Component {\n  render() {\n    return (\n        <header className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <a className=\"navbar-brand\" href=\"##\"><font className=\"logo\"><font className=\"darkorange\">N</font>imbus<font className=\"darkorange\">ly</font></font></a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n  <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"##\">Home <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"##\">Features</a>\n      </li>\n      <li className=\"nav-item dropdown\">\n        <a className=\"nav-link dropdown-toggle\" href=\"##\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Dropdown link\n        </a>\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n          <a className=\"dropdown-item\" href=\"##\">Action</a>\n          <a className=\"dropdown-item\" href=\"##\">Another action</a>\n          <a className=\"dropdown-item\" href=\"##\">Something else here</a>\n        </div>\n      </li>\n    </ul>\n    <ul className={this.props.propstate.door+\" navbar-nav ml-auto\"}>\n      <li className=\"nav-item exit\" onClick={this.logOut.bind(this)}>\n        <a className=\"nav-link unpad\" href=\"##\"><span title=\"Logout\" role=\"img\" aria-label=\"door\">&#x1F6AA;</span></a>\n      </li>\n      </ul>\n  </div>\n</nav>\n        </header>\n    );\n  }\n\nlogOut(){\n  this.props.logOut()\n}\n\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Register extends Component {\n  state = {\n    firstname: \"\",\n    lastname: \"\",\n    regUsername: \"\",\n    regPassword: \"\"\n  }\n  render() {\n    return (\n      <div className=\"LoginCont\">\n        <div className=\"Login Register\">\n          <br /><br />\n          <p className=\"loghead\">Register</p><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;Firstname: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"text\" name=\"firstname\" onChange={this.handler.bind(this)} value={this.state.firstname}></input></span><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;Lastname:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"text\" name=\"lastname\" onChange={this.handler.bind(this)} value={this.state.lastname}></input></span><br /><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;User name: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"text\" name=\"regUsername\" onChange={this.handler.bind(this)} value={this.state.regUsername}></input></span><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;Password:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"password\" name=\"regPassword\" onChange={this.handler.bind(this)} value={this.state.regPassword}></input></span><br /><br /><br />\n          <button type=\"button\" className=\"btn btn-warning btn-sign-in\" onClick={this.registerBtn.bind(this)}>Register</button>\n          <div className=\"noAccount\" onClick={this.prophasAccount.bind(this)}>I already have an account</div>\n\n          <div className={this.props.propstate.alert + \" alert alert-danger alert-dismissible fade show\"} role=\"alert\">\n            <strong>{this.props.propstate.alertBoldTxt}</strong> {this.props.propstate.alertTxt}\n            <button type=\"button\" className=\"close\" onClick={this.alertOff.bind(this)}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handler(ev) {\n    this.setState({ [ev.target.name]: ev.target.value })\n  }\n\n  prophasAccount() {\n    this.props.hasAccount();\n  }\n\n  async registerBtn() {\n    if (this.state.firstname.length > 1 && this.state.lastname.length > 1 && this.state.regUsername.length > 5 && this.state.regPassword.length > 5) {\n      let resp = await fetch('http://localhost:3000/register', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      });\n      // eslint-disable-next-line\n      let data = await resp.json();\n      if (data.taken) {\n        this.props.summonAlert(\"Error\", \"User name \" + this.state.regUsername + \" already taken\")\n      }\n      else {\n        alert(\"thanks for registering \" + this.state.firstname)\n      }\n    }\n    else {\n      if (this.state.regUsername.length <= 5 || this.state.regPassword.length <= 5) {\n        this.props.summonAlert(\"Error\", \"Make sure your User name And Password are at least 6 characters long\")\n\n      }\n      else {\n        this.props.summonAlert(\"Error\", \"You must include a first and last name\")\n\n      }\n    }\n  }\n\n  alertOff(){\n    this.props.summonAlert(\"x\")\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport '../App.css';\n\nclass DealMapper extends Component {\n  state = {\n    userFollows:[],\n    btnColor:\"warning\",\n    btnTxt:\"Follow this deal\",\n    btnClass:\"followBlink\"\n  }\n\n  componentDidMount(){\n    // this.setState({userFollows:JSON.parse(this.props.d.following)});\n    let follows = JSON.parse(this.props.d.following)\n    debugger;\n    if(follows.includes(this.props.propstate.isLogged)){\n      this.setState({btnColor:\"success\", btnTxt:\"Unfollow deal\", btnClass:\"unfollow\"})\n    }\n    else{\n      this.setState({btnColor:\"warning\", btnTxt:\"Follow this deal\", btnClass:\"followBlink\"})\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App \">\n        <div className=\"card text-white text-center bg-primary mb-3 \">\n          <img className=\"card-img-top\" src={this.props.d.image} alt={this.props.d.destination} />\n\n          <div className=\"card-header\">{this.props.d.destination}</div>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\"> Departure: {this.props.d.departure} | Arrival: {this.props.d.arrival} <br /><font className=\"priceTag\">Price: {this.props.d.price}$</font></h5>\n            <p className=\"card-text description\">{this.props.d.description}</p>\n          </div>\n          <a href=\"##\" onClick={this.followDeal.bind(this)} className={this.props.propstate.followBtn + \" btn btn-\"+this.state.btnColor+\" w-100 \"+this.state.btnClass}>{this.state.btnTxt}</a>\n          <div className=\"float-left\"><a href=\"##\" onClick={this.deleteDeal.bind(this)} className={this.props.propstate.deleteBtn + \" btn btn-danger deleteBtn\"}>&times; Remove</a>\n            <a href=\"##\" onClick={this.editDeal.bind(this)} className={this.props.propstate.editBtn + \" btn btn-success editBtn\"}>&#x270E; Edit</a></div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n\n  editDeal(ev) {\n\n    let dealDestination = ev.target.parentNode.parentNode.children[1].innerText;\n    let dealDescription = ev.target.parentNode.parentNode.children[2].innerText.split(\"$\")[1].substr(2, 1000)\n    let dealDeparture = ev.target.parentNode.parentNode.children[2].innerText.split(\":\")[1].split(\" \")[1]\n    let dealArrival = ev.target.parentNode.parentNode.children[2].innerText.split(\":\")[2].split(\"P\")[0].split(\" \")[1].split(ev.target.parentNode.parentNode.children[2].innerText.split(\":\")[2].split(\"P\")[0].split(\" \")[1].substr(-1))[0];\n    let dealPrice = ev.target.parentNode.parentNode.children[2].innerText.split(\"$\")[0].split(\":\")[3].substr(1, 6)\n    let dealID = this.props.d.id;\n    debugger;\n    this.props.editor(dealDestination, dealDescription, dealDeparture, dealArrival, dealPrice, dealID)\n  }\n\n  async deleteDeal() {\n    let id = this.props.d.id;\n    let destination = this.props.d.destination;\n    if(window.confirm(\"Are you sure you want to delete the \"+ destination+\" deal (id - \"+id+\")?\")){\n    let resp = await fetch(`http://localhost:3000/delete_deal?dealID=${id}`)\n    // eslint-disable-next-line\n    let content = await resp.json();\n    \n    this.props.deals()\n  }\n  };\n\n  async followDeal(){\n    let dealID = this.props.d.id;\n    let userID = this.props.propstate.isLogged;\n    let parsedUserFollows = this.props.propstate.following;\n    let parsedDealFollows = JSON.parse(this.props.propstate.deals[this.props.d.id-1].following);\n    \n    parsedUserFollows.push(dealID);\n    parsedDealFollows.push(userID);\n    \n    let userFollows =JSON.stringify(parsedUserFollows)\n    let dealFollows = JSON.stringify(parsedDealFollows)\n    let resp = await fetch(`http://localhost:3000/follow_deal?dealID=${dealID}&userID=${userID}&userFollows=${userFollows}&dealFollows=${dealFollows}`)\n    // eslint-disable-next-line\n    let content = await resp.json();\n    debugger;\n    this.props.userFollowStatus(userFollows)\n  }\n\n}\n\nexport default DealMapper;\n","import io from 'socket.io-client';\r\nconst  socket = io('http://localhost:8000');\r\n// socket.on('data', msg => console.log(msg));\r\n\r\nfunction subscribeToData(cb) {\r\n  socket.on('data', timestamp => cb(null, timestamp));\r\n  socket.emit('subscribeToData', 100);\r\n}\r\nexport { subscribeToData };\r\n\r\n","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Editor extends Component {\n  state = {\n    dealDestination: \"\",\n    dealDescription: \"\",\n    dealDeparture: \"\",\n    dealArrival: \"\",\n    dealPrice: \"\",\n    dealID: \"\"\n  }\n\n  componentDidMount() {\n    this.setState({\n      dealDestination: this.props.propstate.dealDestination,\n      dealDescription: this.props.propstate.dealDescription,\n      dealDeparture: this.props.propstate.dealDeparture,\n      dealArrival: this.props.propstate.dealArrival,\n      dealPrice: parseInt(this.props.propstate.dealPrice),\n      dealID: parseInt(this.props.propstate.dealID)\n    });\n  }\n  render() {\n    return (\n      <div className=\"EditorCont\">\n        <div className=\"Login Editor\">\n          <br /><br />\n          <p className=\"loghead\">Editor</p><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;Destination: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"text\" name=\"dealDestination\" onChange={this.handler.bind(this)} value={this.state.dealDestination}></input></span><br /><br />\n          <span className=\"loginfo editDesc\">&nbsp;&nbsp;&nbsp;&nbsp;Description:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <textarea className=\"logInput txtArea\" maxLength=\"599\" name=\"dealDescription\" onChange={this.handler.bind(this)} value={this.state.dealDescription}></textarea></span><br /><br />\n          <div className=\"float-left edit-arrival-departure\"><span className=\"loginfo edit-departure\">&nbsp;&nbsp;&nbsp;&nbsp;Departure:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput flexed-inp\" type=\"text\" name=\"dealDeparture\" onChange={this.handler.bind(this)} value={this.state.dealDeparture}></input></span><br /><br />\n            <span className=\"loginfo edit-arrival\">&nbsp;&nbsp;&nbsp;&nbsp;Arrival:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput flexed-inp\" type=\"text\" name=\"dealArrival\" onChange={this.handler.bind(this)} value={this.state.dealArrival}></input></span></div><br /><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;Price:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"text\" name=\"dealPrice\" onChange={this.handler.bind(this)} value={this.state.dealPrice}></input></span><br /><br />\n          <span className=\"loginfo editImage\">&nbsp;&nbsp;&nbsp;&nbsp;Image: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input type=\"file\" name=\"image\" onChange={this.handler.bind(this)} value={this.state.regUsername}></input></span><br /><br /><br />\n          <button type=\"button\" onClick={this.updateDeal.bind(this)} className=\"btn btn-warning btn-sign-in\" >Edit</button><br />\n\n        </div>\n      </div>\n\n      // <div className={this.props.propstate.alert + \" alert alert-danger alert-dismissible fade show\"} role=\"alert\">\n      //   <strong>{this.props.propstate.alertBoldTxt}</strong> {this.props.propstate.alertTxt}\n      //   <button type=\"button\" className=\"close\" >\n      //     <span aria-hidden=\"true\">&times;</span>\n      //   </button>\n      // </div>\n    );\n  }\n\n  async updateDeal() {\n    let id = parseInt(this.state.dealID)\n    let price = parseInt(this.state.dealPrice)\n    let resp = await fetch(`http://localhost:3000/editDeal?dealDestination=${this.state.dealDestination}&dealDescription=${this.state.dealDescription}&dealDeparture=${this.state.dealDeparture}&dealArrival=${this.state.dealArrival}&dealPrice=${price},&dealID=${id}`)\n    // eslint-disable-next-line\n    let content = await resp.json();\n    this.props.deals()\n  };\n  \n\n  handler(ev) {\n    this.setState({ [ev.target.name]: ev.target.value })\n  }\n\n  // prophasAccount() {\n  //   this.props.hasAccount();\n  // }\n\n  // async registerBtn() {\n  //   if (this.state.firstname.length > 1 && this.state.lastname.length > 1 && this.state.regUsername.length > 5 && this.state.regPassword.length > 5) {\n  //     let resp = await fetch('http://localhost:3000/register', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Accept': 'application/json',\n  //         'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(this.state)\n  //     });\n  //     // eslint-disable-next-line\n  //     let data = await resp.json();\n  //     if (data.taken) {\n  //       this.props.summonAlert(\"Error\", \"User name \" + this.state.regUsername + \" already taken\")\n  //     }\n  //     else {\n  //       alert(\"thanks for registering \" + this.state.firstname)\n  //     }\n  //   }\n  //   else {\n  //     if (this.state.regUsername.length <= 5 || this.state.regPassword.length <= 5) {\n  //       this.props.summonAlert(\"Error\", \"Make sure your User name And Password are at least 6 characters long\")\n\n  //     }\n  //     else {\n  //       this.props.summonAlert(\"Error\", \"You must include a first and last name\")\n\n  //     }\n  //   }\n  // }\n\n  // alertOff(){\n  //   this.props.summonAlert(\"x\")\n  // }\n}\n\nexport default Editor;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Login from './comp/Login';\nimport Header from './comp/Header';\nimport Register from './comp/Register';\nimport DealMapper from './comp/DealMapper';\nimport { subscribeToData } from './api';\nimport Editor from './comp/Editor';\n\nclass App extends Component {\n  state = {\n    hasAccount: true,\n    alert: \"alertOff\",\n    alertBoldTxt: \"\",\n    alertTxt: \"\",\n    isLogged: 0,\n    following:[],\n    deals: [],\n    door: \"hideIfNotLogged\",\n    followBtn:\"\",\n    deleteBtn:\"\",\n    editBtn:\"\",\n    editor: false,\n    dealDestination:\"\",\n    dealDescription:\"\",\n    dealDeparture:\"\",\n    dealArrival:\"\",\n    dealPrice:\"\",\n    dealID:\"\"\n\n }\n\n  componentDidMount() {\n    this.deals();\n  }\n\n  async deals() {\n    subscribeToData((err, deals) => this.setState({\n      deals\n    }));\n    debugger;\n    if(this.state.editor){\n      this.setState({editor:false, isLogged:1})\n    }\n  }\n\n  render() {\n\n    if (this.state.hasAccount & this.state.isLogged === 0) {\n      return (\n        <div className=\"App\">\n\n          <Header logOut={this.logOut.bind(this)} propstate={this.state} />\n          <Login isLogged={this.isLogged.bind(this)} summonAlert={this.summonAlert.bind(this)} propstate={this.state} hasAccount={this.hasAccount.bind(this)} />\n        </div>\n      );\n    }\n    if (!this.state.hasAccount & this.state.isLogged === 0) {\n      return (\n        <div className=\"App\">\n\n          <Header logOut={this.logOut.bind(this)} propstate={this.state} />\n          <Register isLogged={this.isLogged.bind(this)} summonAlert={this.summonAlert.bind(this)} propstate={this.state} hasAccount={this.hasAccount.bind(this)} />\n        </div>\n      );\n    }\n    if (this.state.isLogged !== 0 && this.state.isLogged !== 1) {\n      return (\n        <div className=\"App\">\n          <Header logOut={this.logOut.bind(this)} propstate={this.state} />\n          {this.state.deals.map(d => <DealMapper propstate={this.state} key={d.id} d={d} userFollowStatus={this.userFollowStatus.bind(this)}/>)}\n        </div>\n      );\n    }\n    if (this.state.isLogged === 1 && !this.state.editor) {\n      return (\n        <div className=\"App\">\n          <Header logOut={this.logOut.bind(this)} propstate={this.state} />\n          <p className=\"Adminhead\">Admin Mode</p>\n          {this.state.deals.map(d => <DealMapper editor={this.editor.bind(this)} propstate={this.state} key={d.id} d={d} />)}\n        </div>\n      );\n    }\n    if (this.state.editor) {\n      return (\n        <div className=\"App\">\n          <Header logOut={this.logOut.bind(this)} propstate={this.state} />\n          <p className=\"Adminhead\">Admin Mode</p>\n          <Editor deals={this.deals.bind(this)} editor={this.editor.bind(this)} propstate={this.state}/>\n        </div>\n      );\n    }\n  }\n\n  editor(dealDestination, dealDescription, dealDeparture, dealArrival, dealPrice, dealID){\n    this.setState({\n      editor:!this.state.editor,\n      dealDestination:dealDestination,\n      dealDescription:dealDescription,\n      dealDeparture:dealDeparture,\n      dealArrival:dealArrival,\n      dealPrice:dealPrice,\n      dealID:dealID\n    })\n    debugger;\n  }\n\n  summonAlert(alertBoldTxt, alertTxt, ev) {\n\n    debugger\n    if (alertBoldTxt === \"x\") {\n      this.setState({ alert: \"alertOff\", alertBoldTxt: \"\", alertTxt: \"\" })\n    }\n    else {\n      this.setState({ alert: \"alertOn\", alertBoldTxt: alertBoldTxt, alertTxt: alertTxt })\n    }\n  }\n\n  hasAccount() {\n\n    this.setState({ hasAccount: !this.state.hasAccount })\n  }\n\n  isLogged(id, firstname, lastname, username, password, following) {\n    this.setState({ isLogged: id, door: \"displayIfLogged\", following:JSON.parse(following) })\n    if (this.state.isLogged === 1) {\n      this.setState({\n      followBtn: \"hideIfNotLogged\",\n      deleteBtn: \"displayIfLogged\",\n      editBtn: \"displayIfLogged\"})\n    }\n    if (this.state.isLogged !== 1 && this.state.isLogged !== 0) {\n      this.setState({\n        followBtn: \"displayIfLogged\",\n        deleteBtn: \"hideIfNotLogged\",\n        editBtn: \"hideIfNotLogged\"\n      })\n    }\n  }\n\n  logOut() {\n    this.setState({ isLogged: 0, hasAccount: true, door: \"hideIfNotLogged\" })\n  }\n\n  userFollowStatus(following){\n    this.setState({following:JSON.parse(following)})\n    this.deals();\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}