{"version":3,"sources":["comp/Login.js","comp/Header.js","comp/Register.js","comp/DealMapper.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","username","password","react_default","a","createElement","className","type","name","onChange","this","handler","bind","value","onClick","loginBtn","prophasAccount","props","propstate","alert","role","alertBoldTxt","alertTxt","alertOff","aria-hidden","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","resp","json","data","noUser","summonAlert","isLogged","id","firstname","lastname","following","ev","setState","Object","defineProperty","target","hasAccount","Component","Header","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","door","logOut","Register","regUsername","regPassword","registerBtn","length","taken","DealMapper","src","d","image","alt","destination","departure","arrival","price","description","App","deals","content","comp_Header","comp_Login","comp_Register","map","comp_DealMapper","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24d580af.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n  render() {\n    return (\n      <div className=\"LoginCont\">\n        <div className=\"Login\">\n          <br /><br />\n          <p className=\"loghead\">Login</p><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;User name: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"text\" name=\"username\" onChange={this.handler.bind(this)} value={this.state.username}></input></span><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;Password:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"password\" name=\"password\" onChange={this.handler.bind(this)} value={this.state.password}></input></span><br /><br /><br />\n          <button type=\"button\" className=\"btn btn-warning btn-sign-in\" onClick={this.loginBtn.bind(this)}>Sign In</button>\n          <div className=\"noAccount\" onClick={this.prophasAccount.bind(this)}>I don't have an account</div>\n\n          <div className={this.props.propstate.alert + \" alert alert-danger alert-dismissible fade show\"} role=\"alert\">\n            <strong>{this.props.propstate.alertBoldTxt}</strong> {this.props.propstate.alertTxt}\n            <button type=\"button\" className=\"close\" onClick={this.alertOff.bind(this)}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n\n  async loginBtn() {\n\n    let resp = await fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state)\n    });\n    // eslint-disable-next-line\n    let data = await resp.json();\n    debugger;\n    if (data.noUser) {\n      this.props.summonAlert(\"Error\", \"The user name or password that you typed is incorrect\")\n    }\n    else {\n      // alert(\"thanks for loging \" + data[0].firstname)\n      this.props.isLogged(data[0].id, data[0].firstname, data[0].lastname, data[0].username, data[0].password, data[0].following)\n    }\n  }\n\n  handler(ev) {\n    this.setState({ [ev.target.name]: ev.target.value })\n  }\n\n  prophasAccount() {\n    this.props.hasAccount();\n  }\n\n  alertOff() {\n    this.props.summonAlert(\"x\")\n  }\n\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Header extends Component {\n  render() {\n    return (\n        <header className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <a className=\"navbar-brand\" href=\"##\"><font className=\"logo\"><font className=\"darkorange\">N</font>imbus<font className=\"darkorange\">ly</font></font></a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n  <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"##\">Home <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"##\">Features</a>\n      </li>\n      <li className=\"nav-item dropdown\">\n        <a className=\"nav-link dropdown-toggle\" href=\"##\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Dropdown link\n        </a>\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n          <a className=\"dropdown-item\" href=\"##\">Action</a>\n          <a className=\"dropdown-item\" href=\"##\">Another action</a>\n          <a className=\"dropdown-item\" href=\"##\">Something else here</a>\n        </div>\n      </li>\n    </ul>\n    <ul className={this.props.propstate.door+\" navbar-nav ml-auto\"}>\n      <li className=\"nav-item exit\" onClick={this.logOut.bind(this)}>\n        <a className=\"nav-link unpad\" href=\"##\"><span role=\"img\" aria-label=\"door\">&#x1F6AA;</span></a>\n      </li>\n      </ul>\n  </div>\n</nav>\n        </header>\n    );\n  }\n\nlogOut(){\n  this.props.logOut()\n}\n\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Register extends Component {\n  state = {\n    firstname: \"\",\n    lastname: \"\",\n    regUsername: \"\",\n    regPassword: \"\"\n  }\n  render() {\n    return (\n      <div className=\"LoginCont\">\n        <div className=\"Login Register\">\n          <br /><br />\n          <p className=\"loghead\">Register</p><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;Firstname: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"text\" name=\"firstname\" onChange={this.handler.bind(this)} value={this.state.firstname}></input></span><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;Lastname:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"text\" name=\"lastname\" onChange={this.handler.bind(this)} value={this.state.lastname}></input></span><br /><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;User name: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"text\" name=\"regUsername\" onChange={this.handler.bind(this)} value={this.state.regUsername}></input></span><br /><br />\n          <span className=\"loginfo\">&nbsp;&nbsp;&nbsp;&nbsp;Password:&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       <input className=\"logInput\" type=\"password\" name=\"regPassword\" onChange={this.handler.bind(this)} value={this.state.regPassword}></input></span><br /><br /><br />\n          <button type=\"button\" className=\"btn btn-warning btn-sign-in\" onClick={this.registerBtn.bind(this)}>Register</button>\n          <div className=\"noAccount\" onClick={this.prophasAccount.bind(this)}>I already have an account</div>\n\n          <div className={this.props.propstate.alert + \" alert alert-danger alert-dismissible fade show\"} role=\"alert\">\n            <strong>{this.props.propstate.alertBoldTxt}</strong> {this.props.propstate.alertTxt}\n            <button type=\"button\" className=\"close\" onClick={this.alertOff.bind(this)}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handler(ev) {\n    this.setState({ [ev.target.name]: ev.target.value })\n  }\n\n  prophasAccount() {\n    this.props.hasAccount();\n  }\n\n  async registerBtn() {\n    if (this.state.firstname.length > 1 && this.state.lastname.length > 1 && this.state.regUsername.length > 5 && this.state.regPassword.length > 5) {\n      let resp = await fetch('http://localhost:3000/register', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      });\n      // eslint-disable-next-line\n      let data = await resp.json();\n      if (data.taken) {\n        this.props.summonAlert(\"Error\", \"User name \" + this.state.regUsername + \" already taken\")\n      }\n      else {\n        alert(\"thanks for registering \" + this.state.firstname)\n      }\n    }\n    else {\n      if (this.state.regUsername.length <= 5 || this.state.regPassword.length <= 5) {\n        this.props.summonAlert(\"Error\", \"Make sure your User name And Password are at least 6 characters long\")\n\n      }\n      else {\n        this.props.summonAlert(\"Error\", \"You must include a first and last name\")\n\n      }\n    }\n  }\n\n  alertOff(){\n    this.props.summonAlert(\"x\")\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport '../App.css';\n\nclass DealMapper extends Component {\n  \n  render() {\n    return (\n      <div className=\"App \">\n        <div className=\"card text-white text-center bg-primary mb-3 \">\n        <img className=\"card-img-top\" src={this.props.d.image} alt={this.props.d.destination}/>\n\n          <div className=\"card-header\">{this.props.d.destination}</div>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\"> Departure: {this.props.d.departure} | Arrival: {this.props.d.arrival} <br/><font className=\"priceTag\">Price: {this.props.d.price}$</font></h5>\n            <p className=\"card-text description\">{this.props.d.description}</p>\n          </div>\n          <a href=\"##\" className=\"btn btn-warning w-100 followBlink\">Follow this deal</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DealMapper;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Login from './comp/Login';\nimport Header from './comp/Header';\nimport Register from './comp/Register';\nimport DealMapper from './comp/DealMapper';\n\nclass App extends Component {\n  state = {\n    hasAccount: true,\n    alert: \"alertOff\",\n    alertBoldTxt: \"\",\n    alertTxt: \"\",\n    isLogged: 0,\n    deals: [],\n    door:\"hideIfNotLogged\"\n  }\n\n  componentDidMount() {\n    this.deals();\n  }\n\n  async deals() {\n    let resp = await fetch('http://localhost:3000/alldeals');\n    let content = await resp.json();\n    this.setState({deals:content});\n    debugger;\n  }\n\n  render() {\n\n    if (this.state.hasAccount & this.state.isLogged === 0) {\n      return (\n        <div className=\"App\">\n\n          <Header logOut={this.logOut.bind(this)} propstate={this.state} />\n          <Login isLogged={this.isLogged.bind(this)} summonAlert={this.summonAlert.bind(this)} propstate={this.state} hasAccount={this.hasAccount.bind(this)} />\n        </div>\n      );\n    }\n    if (!this.state.hasAccount & this.state.isLogged === 0) {\n      return (\n        <div className=\"App\">\n\n          <Header logOut={this.logOut.bind(this)} propstate={this.state} />\n          <Register isLogged={this.isLogged.bind(this)} summonAlert={this.summonAlert.bind(this)} propstate={this.state} hasAccount={this.hasAccount.bind(this)} />\n        </div>\n      );\n    }\n    if (this.state.isLogged !== 0 && this.state.isLogged !== 1) {\n      return (\n        <div className=\"App\">\n          <Header logOut={this.logOut.bind(this)} propstate={this.state} />\n         {this.state.deals.map(d => <DealMapper key={d.id} d={d}/>)}\n        </div>\n      );\n    }\n    if (this.state.isLogged === 1) {\n      return (\n        <div className=\"App\">\n          <Header logOut={this.logOut.bind(this)} propstate={this.state} />\n          <p className=\"Adminhead\">Admin Mode</p>\n         {this.state.deals.map(d => <DealMapper key={d.id} d={d}/>)}\n        </div>\n      );\n    }\n  }\n\n  summonAlert(alertBoldTxt, alertTxt, ev) {\n\n    debugger\n    if (alertBoldTxt === \"x\") {\n      this.setState({ alert: \"alertOff\", alertBoldTxt: \"\", alertTxt: \"\" })\n    }\n    else {\n      this.setState({ alert: \"alertOn\", alertBoldTxt: alertBoldTxt, alertTxt: alertTxt })\n    }\n  }\n\n  hasAccount() {\n\n    this.setState({ hasAccount: !this.state.hasAccount })\n  }\n\n  isLogged(id, firstname, lastname, username, password, following){\n    this.setState({isLogged:id ,door:\"displayIfLogged\"})\n  }\n\n  logOut(){\n    this.setState({isLogged:0, hasAccount:true, door:\"hideIfNotLogged\"})\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}